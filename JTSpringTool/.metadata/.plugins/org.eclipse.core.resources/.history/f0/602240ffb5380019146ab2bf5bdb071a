package com.jt.web.interceptor;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.druid.util.StringUtils;
import com.jt.common.po.User;
import com.jt.common.util.MapperUtil;

import redis.clients.jedis.JedisCluster;

public class UserInterceptor implements HandlerInterceptor{
	
	@Autowired
	private JedisCluster jedisCluster;

	/**
	 * 执行业务之前拦截   返回值true请求放行,false请求拦截且需添加重定向
	 * 1.通过request对象获取cookie
	 * 2.从cookie中获取token数据,如果无数据则没登录
	 * 3.根据token数据获取redis中的信息.如果redis缓存中,没有数据则需要用户重新登陆
	 * 4.如果token中有数据,redis中有记录则表示用户已经登录,页面正确跳转
	 */
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		Cookie[] cookies = request.getCookies();
		String token = null;
		for (Cookie cookie : cookies) {
			if("JT_TICKET".equals(cookie.getName())) {
				token = cookie.getValue();
				break;
			}
		}
		if(!StringUtils.isEmpty(token)) {
			//判断redis是否有数据
			String userJSON = jedisCluster.get(token);
			if(!StringUtils.isEmpty(userJSON)){
				User user = MapperUtil.toObject(userJSON, User.class);
				Long userId = user.getId();
				request.getSession().setAttribute("JT_WEB_USER", userId);
				return true;
			}
		}
		//证明用户没登录,重定向登录页面
		response.sendRedirect("/user/login.html");
		return false;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
			throws Exception {
		// TODO Auto-generated method stub
		
	}

}
